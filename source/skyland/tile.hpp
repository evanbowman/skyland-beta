////////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2023  Evan Bowman. Some rights reserved.
//
// This program is source-available; the source code is provided for educational
// purposes. All copies of the software must be distributed along with this
// license document.
//
// 1. DEFINITION OF SOFTWARE: The term "Software" refers to SKYLAND,
// including any updates, modifications, or associated documentation provided by
// Licensor.
//
// 2. DERIVATIVE WORKS: Licensee is permitted to modify the source code.
//
// 3. COMMERCIAL USE: Commercial use is not allowed.
//
// 4. ATTRIBUTION: Licensee is required to provide attribution to Licensor.
//
// 5. INTELLECTUAL PROPERTY RIGHTS: All intellectual property rights in the
// Software shall remain the property of Licensor. The Licensee does not acquire
// any rights to the Software except for the limited use rights specified in
// this Agreement.
//
// 6. WARRANTY AND LIABILITY: The Software is provided "as is" without warranty
// of any kind. Licensor shall not be liable for any damages arising out of or
// related to the use or inability to use the Software.
//
// 7. TERMINATION: This Agreement shall terminate automatically if Licensee
// breaches any of its terms and conditions. Upon termination, Licensee must
// cease all use of the Software and destroy all copies.
//
////////////////////////////////////////////////////////////////////////////////


#pragma once


#include "tileId.hpp"



namespace skyland
{



struct StaticTile
{
    // These tiles are not dynamically re-mappable. They live at fixed positions
    // at the beginning of the tile set.
    enum __StaticTile : TileId {
        null,
        airborne_selection = 1,
        flag_start = 2,
        flag_end = 5,
        group_icons,
        path_marker,
        icons_2,
        count,
    };
};



struct Tile
{
    enum __Tile : TileId {
        null,
        airborne_selection = 1,
        flag_start = 2,
        flag_end = 5,
        __fixme,
        __fixme2,
        palm_1_dead,
        palm_2,
        shrubbery,
        ion_fizzler_exterior = 11,
        terrain_middle,
        terrain_left,
        terrain_right,
        wall_window_1,
        wall_window_2,
        wall_plain_1,
        wall_plain_2,
        roof_plain,
        roof_chimney,
        cannon_1,
        armored_wall_1,
        armored_wall_2,
        roof_plain_intersect_armored_wall,
        wall_window_middle_1,
        wall_window_middle_2,
        grass,
        reserved_1,
        hull,
        wall_plain_middle,
        reserved_3,
        window_lit_1,
        window_lit_2,
        reserved_6,
        missile_silo_1,
        missile_silo_2,
        forcefield,
        wall_window_lit_1,
        wall_window_lit_2,
        reserved9,
        reserved10,
        tin_chimney,
        plundered_room,
        reserved_11,
        reserved_12,
        radar_1,
        radar_2,
        reserved_13,
        reserved_14,
        reserved_15,
        reserved_16,
        particle_gun,
        reserved_17,
        reserved_18,
        reserved_19,
        reserved_20,
        reserved_21,
        flak_gun_1,
        flak_gun_2,
        drone_bay_1,
        drone_bay_2,
        decimator_1,
        decimator_2,
        roof_plain_night,
        roof_chimney_night,
        roof_flag_night,
        roof_strut_night,
        roof_strut_joined_night,
        field_hull,
        ion_fizzler,
        reserved_27,
        reserved_28,
        reserved_29,
        reserved_30,
        reserved_31,
        reserved_32,
        arc_gun,
        masonry,
        statue_1,
        statue_2,
        bridge,
        nemesis_1,
        nemesis_2,
        bronze,
        dynamite,
        tnt,
        reserved_33,
        synth,
        speaker_inactive,
        speaker_active,
        radiator,
        palm_1,
        switch_on,
        switch_off,
        banana_plant,
        roof_flag,
        flag_mount,
        sunflower,
        fountain,
        bridge_truss,
        scaffolding_angled_l,
        scaffolding_angled_r,
        strut,
        strut_top,
        roof_strut,
        roof_strut_joined,
        soil,
        mirror_hull,
        stacked_hull,
        lemon_tree_1,
        lemon_tree_2,

        RESERVED_RANGE_DO_NOT_USE,

        canvas_tiles_begin = 113,
        canvas_tiles_end = 127,

        liberty_1,
        liberty_2,
        liberty_3,
        liberty_4,
        liberty_5,
        liberty_6,
        liberty_7,
        liberty_8,
        escape_beacon_off_1,
        escape_beacon_off_2,
        escape_beacon_base,
        escape_beacon_on_1,
        escape_beacon_on_2,
        barrier,
        water_top,
        water_right,
        water_column,
        water_left,
        lava_top,
        lava_right,
        lava_column,
        lava_left,
        mycelium,
        mycelium_top,
        mycelium_middle,
        mycelium_bottom,
        incinerator_1,
        incinerator_2,
        incinerator_3,
        incinerator_4,
        beam_gun_1,
        beam_gun_2,
        beam_gun_3,
        piston_opened_u_1,
        piston_opened_u_2,
        piston_closed_d,
        piston_opened_d_1,
        piston_opened_d_2,
        forcefield2,
        solar_cell,
        fire_charge_1,
        fire_charge_2,
        ice,
        basalt_top,
        basalt,
        torch,
        cesium,
        gold,
        rocket_silo_1,
        rocket_silo_2,
        rocket_silo_3,
        crane_1,
        crane_2,
        crane_3,
        crane_4,
        crane_5,
        crane_6,
        annihilator_1,
        annihilator_2,
        weather_engine_1,
        weather_engine_2,
        targeting_computer_1,
        targeting_computer_2,
        targeting_computer_3,
        targeting_computer_4,
        damaged_hull,
        damaged_bronze_hull,
        damaged_mirror_hull,
        damaged_stacked_hull,
        damaged_energized_hull,
        damaged_forcefield,
        damaged_forcefield2,
        spark_cannon_l1,
        spark_cannon_l2,
        spark_cannon_l3,
        spark_cannon_front,
        qr_block,
        cloak,
        cloaked,
        statue_3,
        statue_4,
        statue_5,
        statue_6,
        boarding_pod1,
        boarding_pod2,
        boarding_pod3,
        boarding_pod4,
        boarding_pod5,
        boarding_pod6,
        void1,
        void2,
        tile,
        null_1,
        null_2,
        null_3,
        null_4,
        null_5,
        null_6,
        null_7,
        null_8,
        null_9,
        masonry_vines,
        statue_7,
        statue_8,
        windmill,
        masonry_brick,
        clumpbomb_1,
        clumpbomb_2,
        clumpbomb_3,
        clumpbomb_4,
        balloon_1,
        balloon_2,
        balloon_3,
        balloon_4,
        balloon_5,
        balloon_6,
        balloon_7,
        balloon_8,
        balloon_9,
        basket_1,
        basket_2,
        basket_3,
        basket_4,
        snow,
        reserved_e1,
        reserved_e2,
        reserved_e3,
        reserved_e4,
        reserved_e5,
        reserved_e6,
        reserved_e7,
        reserved_e8,
        reserved_e9,
        reserved_e10,
        reserved_e11,
        warhead_1,
        warhead_2,
        statue_9,
        statue_10,
        market_stall_1,
        market_stall_2,
        market_stall_3,
        market_stall_4,
        market_stall_5,
        market_stall_6,
        canvas,
        deflector_boundary_tl,
        deflector_boundary_t,
        deflector_boundary_tr,
        deflector_boundary_l,
        deflector_boundary_r,
        deflector_boundary_bl,
        deflector_boundary_b,
        deflector_boundary_br,
        deflector_boundary_center,
        deflector_source,
        reserved_p1,
        reserved_d1,
        reserved_d2,
        reserved_d3,
        reserved_d4,
        amplifier,
        count
    };
};



struct InteriorTile
{
    enum __InteriorTile : TileId {
        null,
        airborne_selection = 1,
        flag_start = 2,
        flag_end = 5,
        __fixme,
        __fixme2,
        palm_1_dead,
        palm_2,
        shrubbery,
        ion_fizzler_interior = 11,
        core_1 = 15,
        core_2,
        core_3,
        core_4,
        roof_1,
        roof_2,
        cannon_1,
        ladder_base,
        ladder_mid,
        roof_3,
        backup_core,
        ladder_top,
        grass,
        empty,
        hull,
        workshop_1,
        workshop_2,
        workshop_3,
        workshop_4,
        __unused2__,
        missile_silo_1,
        missile_silo_2,
        forcefield,
        infirmary_1,
        infirmary_3,
        infirmary_2,
        infirmary_4,
        tin_chimney,
        plundered_room,
        transporter_1,
        transporter_2,
        radar_1,
        radar_2,
        bulkhead_closed_1,
        bulkhead_closed_2,
        bulkhead_open_1,
        plain_floor,
        particle_gun,
        transporter_recharge,
        replicator_1,
        replicator_2,
        replicator_3,
        replicator_4,
        flak_gun_1,
        flak_gun_2,
        drone_bay_1,
        drone_bay_2,
        decimator_1,
        decimator_2,
        decimator_int,
        reactor_1,
        reactor_2,
        reactor_3,
        reactor_4,
        field_hull,
        ion_fizzler,
        manufactory_1,
        manufactory_2,
        manufactory_3,
        manufactory_4,
        manufactory_5,
        cargo_bay,
        arc_gun,
        masonry,
        statue_1,
        statue_2,
        bridge,
        nemesis_1,
        nemesis_2,
        bronze,
        dynamite,
        tnt,
        __unused3__,
        synth,
        speaker_inactive,
        speaker_active,
        radiator,
        palm_1,
        switch_on,
        switch_off,
        banana_plant,
        roof_flag,
        flag_mount,
        sunflower,
        fountain,
        bridge_truss,
        scaffolding_angled_l,
        scaffolding_angled_r,
        strut,
        strut_top,
        roof_strut,
        roof_strut_joined,
        soil,
        mirror_hull,
        stacked_hull,
        lemon_tree_1,
        lemon_tree_2,

        // NOTE: Tile 112 displays some "out of memory" text. But, in practice,
        // it's actually really difficult to run out of memory for unique tiles,
        // given the size of the level maps. I tried to use up all tile vram,
        // and couldn't produce an error. Basically, we have
        // one-hundred-and-three or so dynamically loaded tile graphics slots on
        // the gba. The islands in the game support ten blocks in the
        // y-direction and thirteen blocks in the x-direction. So the levels
        // only allow 130 unique blocks (tiles) in the first place. In practice,
        // you'd basically need to intentionally try to produce an error,
        // because no sane playing style would involve filling the level map
        // with 130 different blocks. Furthermore, some blocks have energy
        // requirements, so, at best, you'd need to build several copies of a
        // reactor, probably at least two. So subtract five blocks from the
        // total (reactor tile count). The game's code does handle out of memory
        // errors for vram without crashing, it should in theory just display a
        // tile with a little error message printed on it. But I haven't managed
        // to test whether the code for handling vram out of mem scenarios
        // actually works.
        RESERVED_RANGE_DO_NOT_USE,

        canvas_tiles_begin = 113,
        canvas_tiles_end = 127,

        liberty_1,
        liberty_2,
        liberty_3,
        liberty_4,
        liberty_5,
        liberty_6,
        liberty_7,
        liberty_8,
        escape_beacon_off_1,
        escape_beacon_off_2,
        escape_beacon_base,
        escape_beacon_on_1,
        escape_beacon_on_2,
        barrier,
        water_top,
        water_right,
        water_column,
        water_left,
        lava_top,
        lava_right,
        lava_column,
        lava_left,
        mycelium,
        mycelium_top,
        mycelium_middle,
        mycelium_bottom,
        piston_closed_r,
        piston_opened_r_1,
        piston_opened_r_2,
        piston_closed_l,
        piston_opened_l_1,
        piston_opened_l_2,
        piston_closed_u,
        piston_opened_u_1,
        piston_opened_u_2,
        piston_closed_d,
        piston_opened_d_1,
        piston_opened_d_2,
        forcefield2,
        solar_cell,
        fire_charge_1,
        fire_charge_2,
        ice,
        basalt_top,
        basalt,
        torch,
        cesium,
        gold,
        rocket_silo_1,
        rocket_silo_2,
        rocket_silo_3,
        crane_1,
        crane_2,
        crane_3,
        crane_4,
        crane_5,
        crane_6,
        annihilator_1,
        annihilator_2,
        weather_engine_1,
        weather_engine_2,
        targeting_computer_1,
        targeting_computer_2,
        targeting_computer_3,
        targeting_computer_4,
        damaged_hull,
        damaged_bronze_hull,
        damagad_mirror_hull,
        damaged_stacked_hull,
        damaged_energized_hull,
        damaged_forcefield,
        damaged_forcefield2,
        spark_cannon_l1,
        spark_cannon_l2,
        spark_cannon_l3,
        spark_cannon_front,
        qr_block,
        cloak,
        cloaked,
        statue_3,
        statue_4,
        statue_5,
        statue_6,
        boarding_pod1,
        boarding_pod2,
        boarding_pod3,
        boarding_pod4,
        boarding_pod5,
        boarding_pod6,
        command_module_1,
        command_module_2,
        tile,
        war_engine_1,
        war_engine_2,
        war_engine_3,
        war_engine_4,
        war_engine_5,
        war_engine_6,
        war_engine_7,
        war_engine_8,
        war_engine_9,
        masonry_vines,
        statue_7,
        statue_8,
        windmill,
        masonry_brick,
        clumpbomb_1,
        clumpbomb_2,
        clumpbomb_3,
        clumpbomb_4,
        balloon_1,
        balloon_2,
        balloon_3,
        balloon_4,
        balloon_5,
        balloon_6,
        balloon_7,
        balloon_8,
        balloon_9,
        basket_1,
        basket_2,
        basket_3,
        basket_4,
        snow,
        reserved_e1,
        reserved_e2,
        reserved_e3,
        reserved_e4,
        reserved_e5,
        reserved_e6,
        reserved_e7,
        reserved_e8,
        reserved_e9,
        reserved_e10,
        reserved_e11,
        warhead_1,
        warhead_2,
        statue_9,
        statue_10,
        market_stall_1,
        market_stall_2,
        market_stall_3,
        market_stall_4,
        market_stall_5,
        market_stall_6,
        canvas,
        deflector_boundary_tl,
        deflector_boundary_t,
        deflector_boundary_tr,
        deflector_boundary_l,
        deflector_boundary_r,
        deflector_boundary_bl,
        deflector_boundary_b,
        deflector_boundary_br,
        deflector_boundary_center,
        deflector_source,
        portal_1,
        chaos_core_1,
        chaos_core_2,
        chaos_core_3,
        chaos_core_4,
        amplifier,
        count
    };
};


struct SpriteTile
{
    enum {
        custom_sprite_tile_begin = 110,
    };
};



} // namespace skyland
