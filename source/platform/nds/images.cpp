// clang-format off

// This file was generated by the project's image build pipeline in
// CMakeLists.txt. I have no idea why cmake outputs semicolons between the
// entries in the IMAGE_INCLUDES list variable... maybe some special formatting
// character that I don't know about... or maybe cmake uses ; internally as a
// delimiter... but for now, the cmake script outputs the semicolons on a new
// line, commented out, to suppress the resulting errors.
//
// If you try to manually edit source/platform/gba/images.cpp, the file may be
// overwritten if you have the GBA_AUTOBUILD_IMG option in the cmake environment
// turned on.



#include "data/spritesheet.h"
//;
#include "data/spritesheet_title_screen.h"
//;
#include "data/spritesheet_intro.h"
//;
#include "data/spritesheet_macro.h"
//;
#include "data/spritesheet_macroverse.h"
//;
#include "data/tilesheet.h"
//;
#include "data/tilesheet_enemy_0.h"
//;
#include "data/tilesheet_enemy_0_interior.h"
//;
#include "data/tilesheet_interior.h"
//;
#include "data/tilesheet_world_map_backdrop.h"
//;
#include "data/tilesheet_world_map_framebuffer.h"
//;
#include "data/skyland_title_5_flattened.h"
//;
#include "data/skyland_title_4_flattened.h"
//;
#include "data/skyland_title_3_flattened.h"
//;
#include "data/skyland_title_2_flattened.h"
//;
#include "data/skyland_title_1_flattened.h"
//;
#include "data/skyland_title_0_flattened.h"
//;
#include "data/boot_img_flattened.h"
//;
#include "data/savegame_flattened.h"
//;
#include "data/ending_img_flattened.h"
//;
#include "data/macro_rendertexture.h"
//;
#include "data/developer_mode_flattened.h"
//;
#include "data/zone_image_0_flattened.h"
//;
#include "data/zone_image_1_flattened.h"
//;
#include "data/zone_image_2_flattened.h"
//;
#include "data/zone_image_3_flattened.h"
//;
#include "data/zone_image_4_flattened.h"
//;
#include "data/datacarts_flattened.h"
//;
#include "data/glossary_factory_cg_flattened.h"
//;
#include "data/glossary_misc_cg_flattened.h"
//;
#include "data/glossary_decoration_cg_flattened.h"
//;
#include "data/glossary_power_cg_flattened.h"
//;
#include "data/glossary_wall_cg_flattened.h"
//;
#include "data/gba_health_safety_logo_flattened.h"
//;
#include "data/background.h"
//;
#include "data/background_macro.h"
//;
#include "data/background_macro_night.h"
//;
#include "data/background_title_screen.h"
//;
#include "data/colorProfiles.h"
//;
#include "data/flags.h"
//;
#include "data/character_art.h"
//;
#include "data/paint_icons.h"
//;
#include "data/traded_core_flattened.h"
//;
#include "data/photo_village_flattened.h"
//;
#include "data/photo_goblin_stronghold_flattened.h"
//;
#include "data/photo_surface_flattened.h"
//;
#include "data/photo_market_flattened.h"
//;
#include "data/photo_disaster_flattened.h"
//;
#include "data/photo_incinerator_flattened.h"
//;
#include "data/overlay_datacart.h"
//;
#include "data/overlay_adventurelog.h"
//;
#include "data/overlay_textview.h"
//;
#include "data/stack_overflow_flattened.h"
//;
#include "data/overlay.h"
//;
#include "data/overlay_qr.h"
//;
#include "data/overlay_gamespeed.h"
//;
#include "data/overlay_editor.h"
//;
#include "data/overlay_dialog.h"
//;
#include "data/overlay_dialog_fullscreen.h"
//;
#include "data/overlay_skyland_title.h"
//;
#include "data/charset.h"
//;
#include "data/charset_extended_0.h"
//;
#include "data/charset_extended_1.h"
//;
#include "data/overlay_world_map.h"
//;
#include "data/overlay_island_destroyed.h"
//;
#include "data/overlay_challenges.h"
//;
#include "data/overlay_large_numeral.h"
//;
#include "data/hint_infirmary.h"
//;
#include "data/hint_goblin.h"
//;
#include "data/hint_plunder.h"
//;
#include "data/hint_damaged_core.h"
//

struct TextureData {
    const char* name_;
    const unsigned int* tile_data_;
    const unsigned short* palette_data_;
    u32 tile_data_length_;
    u32 palette_data_length_;
    bool compressed_;
};


#define STR(X) #X
#define TEXTURE_INFO(NAME, COMPR)                                              \
    {                                                                          \
        STR(NAME), NAME##Tiles, NAME##Pal, NAME##TilesLen, NAME##PalLen, COMPR \
    }


static const TextureData sprite_textures[] = {

    TEXTURE_INFO(spritesheet, false),
//;
    TEXTURE_INFO(spritesheet_title_screen, false),
//;
    TEXTURE_INFO(spritesheet_intro, false),
//;
    TEXTURE_INFO(spritesheet_macro, false),
//;
    TEXTURE_INFO(spritesheet_macroverse, false),
//
};


static const TextureData tile_textures[] = {

    TEXTURE_INFO(tilesheet, false),
//;
    TEXTURE_INFO(tilesheet_enemy_0, false),
//;
    TEXTURE_INFO(tilesheet_enemy_0_interior, false),
//;
    TEXTURE_INFO(tilesheet_interior, false),
//;
    TEXTURE_INFO(tilesheet_world_map_backdrop, true),
//;
    TEXTURE_INFO(tilesheet_world_map_framebuffer, true),
//;
    TEXTURE_INFO(skyland_title_5_flattened, true),
//;
    TEXTURE_INFO(skyland_title_4_flattened, true),
//;
    TEXTURE_INFO(skyland_title_3_flattened, true),
//;
    TEXTURE_INFO(skyland_title_2_flattened, true),
//;
    TEXTURE_INFO(skyland_title_1_flattened, true),
//;
    TEXTURE_INFO(skyland_title_0_flattened, true),
//;
    TEXTURE_INFO(boot_img_flattened, true),
//;
    TEXTURE_INFO(savegame_flattened, true),
//;
    TEXTURE_INFO(ending_img_flattened, true),
//;
    TEXTURE_INFO(macro_rendertexture, false),
//;
    TEXTURE_INFO(developer_mode_flattened, true),
//;
    TEXTURE_INFO(zone_image_0_flattened, true),
//;
    TEXTURE_INFO(zone_image_1_flattened, true),
//;
    TEXTURE_INFO(zone_image_2_flattened, true),
//;
    TEXTURE_INFO(zone_image_3_flattened, true),
//;
    TEXTURE_INFO(zone_image_4_flattened, true),
//;
    TEXTURE_INFO(datacarts_flattened, true),
//;
    TEXTURE_INFO(glossary_factory_cg_flattened, true),
//;
    TEXTURE_INFO(glossary_misc_cg_flattened, true),
//;
    TEXTURE_INFO(glossary_decoration_cg_flattened, true),
//;
    TEXTURE_INFO(glossary_power_cg_flattened, true),
//;
    TEXTURE_INFO(glossary_wall_cg_flattened, true),
//;
    TEXTURE_INFO(gba_health_safety_logo_flattened, true),
//
};


static const TextureData overlay_textures[] = {

    TEXTURE_INFO(colorProfiles, false),
//;
    TEXTURE_INFO(flags, false),
//;
    TEXTURE_INFO(character_art, false),
//;
    TEXTURE_INFO(paint_icons, false),
//;
    TEXTURE_INFO(traded_core_flattened, true),
//;
    TEXTURE_INFO(photo_village_flattened, true),
//;
    TEXTURE_INFO(photo_goblin_stronghold_flattened, true),
//;
    TEXTURE_INFO(photo_surface_flattened, true),
//;
    TEXTURE_INFO(photo_market_flattened, true),
//;
    TEXTURE_INFO(photo_disaster_flattened, true),
//;
    TEXTURE_INFO(photo_incinerator_flattened, true),
//;
    TEXTURE_INFO(overlay_datacart, true),
//;
    TEXTURE_INFO(overlay_adventurelog, true),
//;
    TEXTURE_INFO(overlay_textview, true),
//;
    TEXTURE_INFO(stack_overflow_flattened, true),
//;
    TEXTURE_INFO(overlay, false),
//;
    TEXTURE_INFO(overlay_qr, true),
//;
    TEXTURE_INFO(overlay_gamespeed, true),
//;
    TEXTURE_INFO(overlay_editor, true),
//;
    TEXTURE_INFO(overlay_dialog, false),
//;
    TEXTURE_INFO(overlay_dialog_fullscreen, true),
//;
    TEXTURE_INFO(overlay_skyland_title, true),
//;
    TEXTURE_INFO(charset, false),
//;
    TEXTURE_INFO(charset_extended_0, false),
//;
    TEXTURE_INFO(charset_extended_1, false),
//;
    TEXTURE_INFO(overlay_world_map, true),
//;
    TEXTURE_INFO(overlay_island_destroyed, true),
//;
    TEXTURE_INFO(overlay_challenges, true),
//;
    TEXTURE_INFO(overlay_large_numeral, true),
//;
    TEXTURE_INFO(hint_infirmary, true),
//;
    TEXTURE_INFO(hint_goblin, true),
//;
    TEXTURE_INFO(hint_plunder, true),
//;
    TEXTURE_INFO(hint_damaged_core, true),
//
};


static const TextureData background_textures[] = {

    TEXTURE_INFO(background, true),
//;
    TEXTURE_INFO(background_macro, true),
//;
    TEXTURE_INFO(background_macro_night, true),
//;
    TEXTURE_INFO(background_title_screen, true),
//
};


// clang-format on
