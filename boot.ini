################################################################################
#
# SKYLAND Engine boot config
#
# Configuration for startup, prior to initializing the LISP interpreter.
#
#
################################################################################


[profile]
beta = "no"

[hardware]
[hardware.gameboy_advance]
#
# In theory, the Game Boy Advance console provides a predictable hardware
# platform. In practice, cartridge save media and peripheral devices introduce
# small hardware differences, for which we may want to configure stuff. Hence
# the below config.
#
# Some comments about the cartridge hardware:
#
# The engine includes the word-aligned SRAM_Vnnn identifier, and emulators will
# typically detect SRAM as the default storage medium. The game actually does
# support 64 KB flash, though, just not by default. If you change the emulator or
# flash cartridge settings to use a 64 KB flash chip, the game will recognize
# flash storage and use it instead, giving you and additional 32 KB to work with!
# I've set SRAM as the default because it's most widely supported.
#

detect_flash = "yes" # If no, will only use SRAM.

#
# Things get more complicated, though, for aftermarket repro carts. Bootleg
# cartridges from Asia store save data and ROM on the same flash chip, for cost
# savings. Games typically write their data to non-battery-backed SRAM, then
# hackers patch the pirated ROMs to copy all of SRAM to an unused sector at the
# end of the flash chip whenever the player saves. This is of course super
# wasteful in terms of write/erase cycles. If you enable the config setting
# detect_repro_flash, then the rom will attempt to detect one of three supported
# aftermarket flash chips, and perform write/erase cycles efficiently for the
# detected flash medium, to minimize erase cycles. The engine implements a
# log-structured filesystem in cartridge save memory, and will write back data
# to the flash chip as it's written to save data, only erasing the flash sector
# when running out of room.
#
# NOTE: If running on a cart from InsideGadgets, or any cartridge that uses
# flash but includes working backup media, configure this option to "no", or the
# game will attempt to write, unnecessarily, to a sector at the end of cart ROM.

detect_repro_flash = "yes"

# If nonzero, the engine will use the integer value as an address, into which to
# write save data. If zero, the game will find a sector 0x40000 bytes from the
# end of the flash chip. Do not configure a nonzero value unless 0 doesn't work,
# as you could accidentally overwrite part of the ROM, which is stored on the
# same chip.
repro_flash_save_address = 0


# Try to detect Game Boy Player, by showing the required splash screen.
detect_gbp = "yes"

# Not necessary, the game runs slightly smoother. Some cartridges may freeze
# when attempting to write the waitcontrol register. Supercard has known issues
# here. Supercard is junk though. You might as well buy a cartridge flasher for
# almost the same price and flash repro carts.
fast_waitstates = "yes"

# Set the prefetch bit in the waitcontrol register.
prefetch = "yes"

# Most cartridges do not support more than 32 KB. Even for those that do, the game
# may break when reformatting flash storage if you specify an really large SRAM
# sector. Confused? Some supported bootleg carts have volatile SRAM which needs
# to be written back to flash.
sram_capacity = 32000

# Overclock EWRAM. The game will not overclock EWRAM regardless of config if the
# device does not support EWRAM overclocking (Game Boy Micro doesn't), so you
# probably want this turned on. But in case an emulator breaks with RAM
# overclocking turned on...
ewram_overclock = "no"

# If enabled, then the game will attempt to detect a realtime clock chip in the
# GBA cartridge.
detect_rtc = "no"

# Displays the classic health and safety warning included in late-era GBA
# games. Even if configured as "yes", the engine will skip the warning screen if
# run on a Nintendo DS, for obvious reasons.
show_epilepsy_warning = "no"
